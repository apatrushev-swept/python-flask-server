# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.features import Features  # noqa: F401,E501
from swagger_server import util


class Plan(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, type: str=None, created_at: str=None, last_modified: str=None, active: str=None, features: Features=None):  # noqa: E501
        """Plan - a model defined in Swagger

        :param id: The id of this Plan.  # noqa: E501
        :type id: str
        :param name: The name of this Plan.  # noqa: E501
        :type name: str
        :param type: The type of this Plan.  # noqa: E501
        :type type: str
        :param created_at: The created_at of this Plan.  # noqa: E501
        :type created_at: str
        :param last_modified: The last_modified of this Plan.  # noqa: E501
        :type last_modified: str
        :param active: The active of this Plan.  # noqa: E501
        :type active: str
        :param features: The features of this Plan.  # noqa: E501
        :type features: Features
        """
        self.swagger_types = {
            'id': str,
            'name': str,
            'type': str,
            'created_at': str,
            'last_modified': str,
            'active': str,
            'features': Features
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'type': 'type',
            'created_at': 'createdAt',
            'last_modified': 'lastModified',
            'active': 'active',
            'features': 'features'
        }

        self._id = id
        self._name = name
        self._type = type
        self._created_at = created_at
        self._last_modified = last_modified
        self._active = active
        self._features = features

    @classmethod
    def from_dict(cls, dikt) -> 'Plan':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The plan of this Plan.  # noqa: E501
        :rtype: Plan
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Plan.


        :return: The id of this Plan.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Plan.


        :param id: The id of this Plan.
        :type id: str
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Plan.


        :return: The name of this Plan.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Plan.


        :param name: The name of this Plan.
        :type name: str
        """

        self._name = name

    @property
    def type(self) -> str:
        """Gets the type of this Plan.


        :return: The type of this Plan.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this Plan.


        :param type: The type of this Plan.
        :type type: str
        """

        self._type = type

    @property
    def created_at(self) -> str:
        """Gets the created_at of this Plan.


        :return: The created_at of this Plan.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: str):
        """Sets the created_at of this Plan.


        :param created_at: The created_at of this Plan.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def last_modified(self) -> str:
        """Gets the last_modified of this Plan.


        :return: The last_modified of this Plan.
        :rtype: str
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified: str):
        """Sets the last_modified of this Plan.


        :param last_modified: The last_modified of this Plan.
        :type last_modified: str
        """

        self._last_modified = last_modified

    @property
    def active(self) -> str:
        """Gets the active of this Plan.


        :return: The active of this Plan.
        :rtype: str
        """
        return self._active

    @active.setter
    def active(self, active: str):
        """Sets the active of this Plan.


        :param active: The active of this Plan.
        :type active: str
        """

        self._active = active

    @property
    def features(self) -> Features:
        """Gets the features of this Plan.


        :return: The features of this Plan.
        :rtype: Features
        """
        return self._features

    @features.setter
    def features(self, features: Features):
        """Sets the features of this Plan.


        :param features: The features of this Plan.
        :type features: Features
        """

        self._features = features
